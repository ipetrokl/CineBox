// <auto-generated />
using System;
using CineBox.Services.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CineBox.Services.Migrations
{
    [DbContext(typeof(CineBoxContext))]
    [Migration("20240723155354_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CineBox.Services.Database.Actor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__Actor__3213E83F2E81C85E");

                    b.ToTable("Actor", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Leonardo DiCaprio"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Kate Winslet"
                        });
                });

            modelBuilder.Entity("CineBox.Services.Database.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.Property<int>("PromotionId")
                        .HasColumnType("int")
                        .HasColumnName("promotion_Id");

                    b.Property<int>("ScreeningId")
                        .HasColumnType("int")
                        .HasColumnName("screening_id");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__Booking__3213E83F4DE83FAA");

                    b.HasIndex("PromotionId");

                    b.HasIndex("ScreeningId");

                    b.HasIndex("UserId");

                    b.ToTable("Booking", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Price = 25.00m,
                            PromotionId = 1,
                            ScreeningId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Price = 30.00m,
                            PromotionId = 2,
                            ScreeningId = 2,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("CineBox.Services.Database.BookingSeat", b =>
                {
                    b.Property<int>("BookingSeatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("bookingSeatId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingSeatId"));

                    b.Property<int>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("booking_id");

                    b.Property<int>("SeatId")
                        .HasColumnType("int")
                        .HasColumnName("seat_id");

                    b.HasKey("BookingSeatId")
                        .HasName("PK__BookingS__0F3B47D633C275B0");

                    b.HasIndex("BookingId");

                    b.HasIndex("SeatId");

                    b.ToTable("BookingSeat", (string)null);

                    b.HasData(
                        new
                        {
                            BookingSeatId = 1,
                            BookingId = 1,
                            SeatId = 1
                        },
                        new
                        {
                            BookingSeatId = 2,
                            BookingId = 1,
                            SeatId = 2
                        },
                        new
                        {
                            BookingSeatId = 3,
                            BookingId = 2,
                            SeatId = 3
                        },
                        new
                        {
                            BookingSeatId = 4,
                            BookingId = 2,
                            SeatId = 4
                        });
                });

            modelBuilder.Entity("CineBox.Services.Database.Cinema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("location");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__Cinema__3213E83F23CFAD71");

                    b.ToTable("Cinema", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Location = "New York",
                            Name = "Cineworld"
                        },
                        new
                        {
                            Id = 2,
                            Location = "Los Angeles",
                            Name = "IMAX"
                        });
                });

            modelBuilder.Entity("CineBox.Services.Database.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__Genre__3213E83F38AFBD04");

                    b.ToTable("Genre", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Drama"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Action"
                        });
                });

            modelBuilder.Entity("CineBox.Services.Database.Hall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CinemaId")
                        .HasColumnType("int")
                        .HasColumnName("cinema_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__Hall__3213E83FD9AF1396");

                    b.HasIndex("CinemaId");

                    b.ToTable("Hall", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CinemaId = 1,
                            Name = "Hall 1"
                        },
                        new
                        {
                            Id = 2,
                            CinemaId = 1,
                            Name = "Hall 2"
                        },
                        new
                        {
                            Id = 3,
                            CinemaId = 1,
                            Name = "Hall 3"
                        },
                        new
                        {
                            Id = 4,
                            CinemaId = 2,
                            Name = "Hall 1"
                        },
                        new
                        {
                            Id = 5,
                            CinemaId = 2,
                            Name = "Hall 2"
                        },
                        new
                        {
                            Id = 6,
                            CinemaId = 2,
                            Name = "Hall 3"
                        });
                });

            modelBuilder.Entity("CineBox.Services.Database.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("director");

                    b.Property<int>("GenreId")
                        .HasColumnType("int")
                        .HasColumnName("genre_id");

                    b.Property<DateTime>("PerformedFrom")
                        .HasColumnType("date")
                        .HasColumnName("performed_from");

                    b.Property<DateTime>("PerformedTo")
                        .HasColumnType("date")
                        .HasColumnName("performed_to");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("picture");

                    b.Property<byte[]>("PictureThumb")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("pictureThumb");

                    b.Property<string>("StateMachine")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("stateMachine");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("PK__Movie__3213E83F2BD5909A");

                    b.HasIndex("GenreId");

                    b.ToTable("Movie", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "A mind-bending thriller",
                            Director = "Christopher Nolan",
                            GenreId = 1,
                            PerformedFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PerformedTo = new DateTime(2024, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Inception"
                        },
                        new
                        {
                            Id = 2,
                            Description = "A romantic disaster film",
                            Director = "James Cameron",
                            GenreId = 1,
                            PerformedFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PerformedTo = new DateTime(2024, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Titanic"
                        });
                });

            modelBuilder.Entity("CineBox.Services.Database.MovieActor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActorId")
                        .HasColumnType("int")
                        .HasColumnName("actor_id");

                    b.Property<int>("MovieId")
                        .HasColumnType("int")
                        .HasColumnName("movie_id");

                    b.HasKey("Id")
                        .HasName("PK__MovieAct__3213E83F842B29CF");

                    b.HasIndex("ActorId");

                    b.HasIndex("MovieId");

                    b.ToTable("MovieActor", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActorId = 1,
                            MovieId = 1
                        },
                        new
                        {
                            Id = 2,
                            ActorId = 2,
                            MovieId = 2
                        });
                });

            modelBuilder.Entity("CineBox.Services.Database.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CinemaId")
                        .HasColumnType("int")
                        .HasColumnName("cinema_id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__News__3213E83F8B80E9AE");

                    b.HasIndex("CinemaId");

                    b.ToTable("News");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CinemaId = 1,
                            CreatedDate = new DateTime(2024, 7, 23, 17, 53, 54, 592, DateTimeKind.Local).AddTicks(1420),
                            Description = "25.11.2024. Cinebox Zagreb will not work, See you soon :)",
                            Name = "Public holiday"
                        },
                        new
                        {
                            Id = 2,
                            CinemaId = 1,
                            CreatedDate = new DateTime(2024, 7, 23, 17, 53, 54, 592, DateTimeKind.Local).AddTicks(1420),
                            Description = "From 01.07.2024. CineBox will have a new working time 18:00 - 02:00",
                            Name = "New working time"
                        },
                        new
                        {
                            Id = 3,
                            CinemaId = 2,
                            CreatedDate = new DateTime(2024, 7, 23, 17, 53, 54, 592, DateTimeKind.Local).AddTicks(1430),
                            Description = "From 01.07.2024. CineBox will have a new working time 18:00 - 02:00",
                            Name = "New working time"
                        });
                });

            modelBuilder.Entity("CineBox.Services.Database.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("amount");

                    b.Property<int>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("booking_id");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("payment_status");

                    b.HasKey("Id")
                        .HasName("PK__Payment__3213E83F05BAE6AD");

                    b.HasIndex("BookingId");

                    b.ToTable("Payment", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 25.00m,
                            BookingId = 1,
                            PaymentStatus = "successfully"
                        },
                        new
                        {
                            Id = 2,
                            Amount = 30.00m,
                            BookingId = 2,
                            PaymentStatus = "successfully"
                        });
                });

            modelBuilder.Entity("CineBox.Services.Database.Promotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("code");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("discount");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("date")
                        .HasColumnName("expiration_date");

                    b.HasKey("Id")
                        .HasName("PK__Promotio__3213E83FC04BB357");

                    b.ToTable("Promotion", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "Code0",
                            Discount = 0.00m,
                            ExpirationDate = new DateTime(2035, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Code = "Summer20",
                            Discount = 20.00m,
                            ExpirationDate = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Code = "Summer25",
                            Discount = 25.00m,
                            ExpirationDate = new DateTime(2024, 9, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("CineBox.Services.Database.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("comment");

                    b.Property<int>("MovieId")
                        .HasColumnType("int")
                        .HasColumnName("movie_id");

                    b.Property<int>("Rating")
                        .HasColumnType("int")
                        .HasColumnName("rating");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__Review__3213E83FD26CF094");

                    b.HasIndex("MovieId");

                    b.HasIndex("UserId");

                    b.ToTable("Review", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comment = "Amazing movie!",
                            MovieId = 1,
                            Rating = 5,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Comment = "Very touching film.",
                            MovieId = 2,
                            Rating = 4,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Comment = "Good.",
                            MovieId = 1,
                            Rating = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            Comment = "Bad.",
                            MovieId = 2,
                            Rating = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("CineBox.Services.Database.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__Roles__3213E83F76DBADCD");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "admin",
                            Name = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Description = "guest",
                            Name = "guest"
                        });
                });

            modelBuilder.Entity("CineBox.Services.Database.Screening", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("category");

                    b.Property<int>("HallId")
                        .HasColumnType("int")
                        .HasColumnName("hall_id");

                    b.Property<int>("MovieId")
                        .HasColumnType("int")
                        .HasColumnName("movie_id");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.Property<DateTime>("ScreeningTime")
                        .HasColumnType("datetime")
                        .HasColumnName("screening_time");

                    b.HasKey("Id")
                        .HasName("PK__Screenin__3213E83F341DB2BE");

                    b.HasIndex("HallId");

                    b.HasIndex("MovieId");

                    b.ToTable("Screening", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "4Dx",
                            HallId = 1,
                            MovieId = 1,
                            Price = 12.50m,
                            ScreeningTime = new DateTime(2024, 7, 24, 20, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Category = "3D",
                            HallId = 2,
                            MovieId = 2,
                            Price = 15.00m,
                            ScreeningTime = new DateTime(2024, 7, 24, 22, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("CineBox.Services.Database.Seat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("category");

                    b.Property<int>("HallId")
                        .HasColumnType("int")
                        .HasColumnName("hall_id");

                    b.Property<int>("SeatNumber")
                        .HasColumnType("int")
                        .HasColumnName("seat_number");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PK__Seat__3213E83F0DCCBA47");

                    b.HasIndex("HallId");

                    b.ToTable("Seat", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 1,
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            Category = "Disabled",
                            HallId = 1,
                            SeatNumber = 2,
                            Status = true
                        },
                        new
                        {
                            Id = 3,
                            Category = "Disabled",
                            HallId = 1,
                            SeatNumber = 3,
                            Status = true
                        },
                        new
                        {
                            Id = 4,
                            Category = "Disabled",
                            HallId = 1,
                            SeatNumber = 4,
                            Status = true
                        },
                        new
                        {
                            Id = 5,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 5,
                            Status = true
                        },
                        new
                        {
                            Id = 6,
                            Category = "Disabled",
                            HallId = 1,
                            SeatNumber = 6,
                            Status = true
                        },
                        new
                        {
                            Id = 7,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 7,
                            Status = true
                        },
                        new
                        {
                            Id = 8,
                            Category = "Disabled",
                            HallId = 1,
                            SeatNumber = 8,
                            Status = true
                        },
                        new
                        {
                            Id = 9,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 9,
                            Status = true
                        },
                        new
                        {
                            Id = 10,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 10,
                            Status = true
                        },
                        new
                        {
                            Id = 11,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 11,
                            Status = true
                        },
                        new
                        {
                            Id = 12,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 12,
                            Status = true
                        },
                        new
                        {
                            Id = 13,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 13,
                            Status = true
                        },
                        new
                        {
                            Id = 14,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 14,
                            Status = true
                        },
                        new
                        {
                            Id = 15,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 15,
                            Status = true
                        },
                        new
                        {
                            Id = 16,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 16,
                            Status = true
                        },
                        new
                        {
                            Id = 17,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 17,
                            Status = true
                        },
                        new
                        {
                            Id = 18,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 18,
                            Status = true
                        },
                        new
                        {
                            Id = 19,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 19,
                            Status = true
                        },
                        new
                        {
                            Id = 20,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 20,
                            Status = true
                        },
                        new
                        {
                            Id = 21,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 21,
                            Status = true
                        },
                        new
                        {
                            Id = 22,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 22,
                            Status = true
                        },
                        new
                        {
                            Id = 23,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 23,
                            Status = true
                        },
                        new
                        {
                            Id = 24,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 24,
                            Status = true
                        },
                        new
                        {
                            Id = 25,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 25,
                            Status = true
                        },
                        new
                        {
                            Id = 26,
                            Category = "Double",
                            HallId = 1,
                            SeatNumber = 26,
                            Status = true
                        },
                        new
                        {
                            Id = 27,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 27,
                            Status = true
                        },
                        new
                        {
                            Id = 28,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 28,
                            Status = true
                        },
                        new
                        {
                            Id = 29,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 29,
                            Status = true
                        },
                        new
                        {
                            Id = 30,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 30,
                            Status = true
                        },
                        new
                        {
                            Id = 31,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 31,
                            Status = true
                        },
                        new
                        {
                            Id = 32,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 32,
                            Status = true
                        },
                        new
                        {
                            Id = 33,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 33,
                            Status = true
                        },
                        new
                        {
                            Id = 34,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 34,
                            Status = true
                        },
                        new
                        {
                            Id = 35,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 35,
                            Status = true
                        },
                        new
                        {
                            Id = 36,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 36,
                            Status = true
                        },
                        new
                        {
                            Id = 37,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 37,
                            Status = true
                        },
                        new
                        {
                            Id = 38,
                            Category = "Double",
                            HallId = 1,
                            SeatNumber = 38,
                            Status = true
                        },
                        new
                        {
                            Id = 39,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 39,
                            Status = true
                        },
                        new
                        {
                            Id = 40,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 40,
                            Status = true
                        },
                        new
                        {
                            Id = 41,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 41,
                            Status = true
                        },
                        new
                        {
                            Id = 42,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 42,
                            Status = true
                        },
                        new
                        {
                            Id = 43,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 43,
                            Status = true
                        },
                        new
                        {
                            Id = 44,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 44,
                            Status = true
                        },
                        new
                        {
                            Id = 45,
                            Category = "Double",
                            HallId = 1,
                            SeatNumber = 45,
                            Status = true
                        },
                        new
                        {
                            Id = 46,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 46,
                            Status = true
                        },
                        new
                        {
                            Id = 47,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 47,
                            Status = true
                        },
                        new
                        {
                            Id = 48,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 48,
                            Status = true
                        },
                        new
                        {
                            Id = 49,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 49,
                            Status = true
                        },
                        new
                        {
                            Id = 50,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 50,
                            Status = true
                        },
                        new
                        {
                            Id = 51,
                            Category = "Double",
                            HallId = 1,
                            SeatNumber = 51,
                            Status = true
                        },
                        new
                        {
                            Id = 52,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 52,
                            Status = true
                        },
                        new
                        {
                            Id = 53,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 53,
                            Status = true
                        },
                        new
                        {
                            Id = 54,
                            Category = "Double",
                            HallId = 1,
                            SeatNumber = 54,
                            Status = true
                        },
                        new
                        {
                            Id = 55,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 55,
                            Status = true
                        },
                        new
                        {
                            Id = 56,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 56,
                            Status = true
                        },
                        new
                        {
                            Id = 57,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 57,
                            Status = true
                        },
                        new
                        {
                            Id = 58,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 58,
                            Status = true
                        },
                        new
                        {
                            Id = 59,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 59,
                            Status = true
                        },
                        new
                        {
                            Id = 60,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 60,
                            Status = true
                        },
                        new
                        {
                            Id = 61,
                            Category = "Double",
                            HallId = 1,
                            SeatNumber = 61,
                            Status = true
                        },
                        new
                        {
                            Id = 62,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 62,
                            Status = true
                        },
                        new
                        {
                            Id = 63,
                            Category = "Double",
                            HallId = 1,
                            SeatNumber = 63,
                            Status = true
                        },
                        new
                        {
                            Id = 64,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 64,
                            Status = true
                        },
                        new
                        {
                            Id = 65,
                            Category = "Double",
                            HallId = 1,
                            SeatNumber = 65,
                            Status = true
                        },
                        new
                        {
                            Id = 66,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 66,
                            Status = true
                        },
                        new
                        {
                            Id = 67,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 67,
                            Status = true
                        },
                        new
                        {
                            Id = 68,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 68,
                            Status = true
                        },
                        new
                        {
                            Id = 69,
                            Category = "Double",
                            HallId = 1,
                            SeatNumber = 69,
                            Status = true
                        },
                        new
                        {
                            Id = 70,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 70,
                            Status = true
                        },
                        new
                        {
                            Id = 71,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 71,
                            Status = true
                        },
                        new
                        {
                            Id = 72,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 72,
                            Status = true
                        },
                        new
                        {
                            Id = 73,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 73,
                            Status = true
                        },
                        new
                        {
                            Id = 74,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 74,
                            Status = true
                        },
                        new
                        {
                            Id = 75,
                            Category = "Double",
                            HallId = 1,
                            SeatNumber = 75,
                            Status = true
                        },
                        new
                        {
                            Id = 76,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 76,
                            Status = true
                        },
                        new
                        {
                            Id = 77,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 77,
                            Status = true
                        },
                        new
                        {
                            Id = 78,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 78,
                            Status = true
                        },
                        new
                        {
                            Id = 79,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 79,
                            Status = true
                        },
                        new
                        {
                            Id = 80,
                            Category = "Single",
                            HallId = 1,
                            SeatNumber = 80,
                            Status = true
                        },
                        new
                        {
                            Id = 81,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 1,
                            Status = true
                        },
                        new
                        {
                            Id = 82,
                            Category = "Disabled",
                            HallId = 2,
                            SeatNumber = 2,
                            Status = true
                        },
                        new
                        {
                            Id = 83,
                            Category = "Disabled",
                            HallId = 2,
                            SeatNumber = 3,
                            Status = true
                        },
                        new
                        {
                            Id = 84,
                            Category = "Disabled",
                            HallId = 2,
                            SeatNumber = 4,
                            Status = true
                        },
                        new
                        {
                            Id = 85,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 5,
                            Status = true
                        },
                        new
                        {
                            Id = 86,
                            Category = "Disabled",
                            HallId = 2,
                            SeatNumber = 6,
                            Status = true
                        },
                        new
                        {
                            Id = 87,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 7,
                            Status = true
                        },
                        new
                        {
                            Id = 88,
                            Category = "Disabled",
                            HallId = 2,
                            SeatNumber = 8,
                            Status = true
                        },
                        new
                        {
                            Id = 89,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 9,
                            Status = true
                        },
                        new
                        {
                            Id = 90,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 10,
                            Status = true
                        },
                        new
                        {
                            Id = 91,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 11,
                            Status = true
                        },
                        new
                        {
                            Id = 92,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 12,
                            Status = true
                        },
                        new
                        {
                            Id = 93,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 13,
                            Status = true
                        },
                        new
                        {
                            Id = 94,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 14,
                            Status = true
                        },
                        new
                        {
                            Id = 95,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 15,
                            Status = true
                        },
                        new
                        {
                            Id = 96,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 16,
                            Status = true
                        },
                        new
                        {
                            Id = 97,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 17,
                            Status = true
                        },
                        new
                        {
                            Id = 98,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 18,
                            Status = true
                        },
                        new
                        {
                            Id = 99,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 19,
                            Status = true
                        },
                        new
                        {
                            Id = 100,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 20,
                            Status = true
                        },
                        new
                        {
                            Id = 101,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 21,
                            Status = true
                        },
                        new
                        {
                            Id = 102,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 22,
                            Status = true
                        },
                        new
                        {
                            Id = 103,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 23,
                            Status = true
                        },
                        new
                        {
                            Id = 104,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 24,
                            Status = true
                        },
                        new
                        {
                            Id = 105,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 25,
                            Status = true
                        },
                        new
                        {
                            Id = 106,
                            Category = "Double",
                            HallId = 2,
                            SeatNumber = 26,
                            Status = true
                        },
                        new
                        {
                            Id = 107,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 27,
                            Status = true
                        },
                        new
                        {
                            Id = 108,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 28,
                            Status = true
                        },
                        new
                        {
                            Id = 109,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 29,
                            Status = true
                        },
                        new
                        {
                            Id = 110,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 30,
                            Status = true
                        },
                        new
                        {
                            Id = 111,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 31,
                            Status = true
                        },
                        new
                        {
                            Id = 112,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 32,
                            Status = true
                        },
                        new
                        {
                            Id = 113,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 33,
                            Status = true
                        },
                        new
                        {
                            Id = 114,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 34,
                            Status = true
                        },
                        new
                        {
                            Id = 115,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 35,
                            Status = true
                        },
                        new
                        {
                            Id = 116,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 36,
                            Status = true
                        },
                        new
                        {
                            Id = 117,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 37,
                            Status = true
                        },
                        new
                        {
                            Id = 118,
                            Category = "Double",
                            HallId = 2,
                            SeatNumber = 38,
                            Status = true
                        },
                        new
                        {
                            Id = 119,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 39,
                            Status = true
                        },
                        new
                        {
                            Id = 120,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 40,
                            Status = true
                        },
                        new
                        {
                            Id = 121,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 41,
                            Status = true
                        },
                        new
                        {
                            Id = 122,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 42,
                            Status = true
                        },
                        new
                        {
                            Id = 123,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 43,
                            Status = true
                        },
                        new
                        {
                            Id = 124,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 44,
                            Status = true
                        },
                        new
                        {
                            Id = 125,
                            Category = "Double",
                            HallId = 2,
                            SeatNumber = 45,
                            Status = true
                        },
                        new
                        {
                            Id = 126,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 46,
                            Status = true
                        },
                        new
                        {
                            Id = 127,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 47,
                            Status = true
                        },
                        new
                        {
                            Id = 128,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 48,
                            Status = true
                        },
                        new
                        {
                            Id = 129,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 49,
                            Status = true
                        },
                        new
                        {
                            Id = 130,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 50,
                            Status = true
                        },
                        new
                        {
                            Id = 131,
                            Category = "Double",
                            HallId = 2,
                            SeatNumber = 51,
                            Status = true
                        },
                        new
                        {
                            Id = 132,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 52,
                            Status = true
                        },
                        new
                        {
                            Id = 133,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 53,
                            Status = true
                        },
                        new
                        {
                            Id = 134,
                            Category = "Double",
                            HallId = 2,
                            SeatNumber = 54,
                            Status = true
                        },
                        new
                        {
                            Id = 135,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 55,
                            Status = true
                        },
                        new
                        {
                            Id = 136,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 56,
                            Status = true
                        },
                        new
                        {
                            Id = 137,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 57,
                            Status = true
                        },
                        new
                        {
                            Id = 138,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 58,
                            Status = true
                        },
                        new
                        {
                            Id = 139,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 59,
                            Status = true
                        },
                        new
                        {
                            Id = 140,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 60,
                            Status = true
                        },
                        new
                        {
                            Id = 141,
                            Category = "Double",
                            HallId = 2,
                            SeatNumber = 61,
                            Status = true
                        },
                        new
                        {
                            Id = 142,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 62,
                            Status = true
                        },
                        new
                        {
                            Id = 143,
                            Category = "Double",
                            HallId = 2,
                            SeatNumber = 63,
                            Status = true
                        },
                        new
                        {
                            Id = 144,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 64,
                            Status = true
                        },
                        new
                        {
                            Id = 145,
                            Category = "Double",
                            HallId = 2,
                            SeatNumber = 65,
                            Status = true
                        },
                        new
                        {
                            Id = 146,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 66,
                            Status = true
                        },
                        new
                        {
                            Id = 147,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 67,
                            Status = true
                        },
                        new
                        {
                            Id = 148,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 68,
                            Status = true
                        },
                        new
                        {
                            Id = 149,
                            Category = "Double",
                            HallId = 2,
                            SeatNumber = 69,
                            Status = true
                        },
                        new
                        {
                            Id = 150,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 70,
                            Status = true
                        },
                        new
                        {
                            Id = 151,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 71,
                            Status = true
                        },
                        new
                        {
                            Id = 152,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 72,
                            Status = true
                        },
                        new
                        {
                            Id = 153,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 73,
                            Status = true
                        },
                        new
                        {
                            Id = 154,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 74,
                            Status = true
                        },
                        new
                        {
                            Id = 155,
                            Category = "Double",
                            HallId = 2,
                            SeatNumber = 75,
                            Status = true
                        },
                        new
                        {
                            Id = 156,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 76,
                            Status = true
                        },
                        new
                        {
                            Id = 157,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 77,
                            Status = true
                        },
                        new
                        {
                            Id = 158,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 78,
                            Status = true
                        },
                        new
                        {
                            Id = 159,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 79,
                            Status = true
                        },
                        new
                        {
                            Id = 160,
                            Category = "Single",
                            HallId = 2,
                            SeatNumber = 80,
                            Status = true
                        });
                });

            modelBuilder.Entity("CineBox.Services.Database.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookingSeatId")
                        .HasColumnType("int")
                        .HasColumnName("booking_seat_id");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.Property<string>("QrCode")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("qr_code");

                    b.Property<string>("TicketCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ticket_code");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__Ticket__3213E83FBF00AE8F");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "BookingSeatId" }, "UQ__Ticket__C073D47C7F315E70")
                        .IsUnique();

                    b.ToTable("Ticket", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookingSeatId = 1,
                            Price = 12.50m,
                            QrCode = "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",
                            TicketCode = "E3DBB11CE45E",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            BookingSeatId = 2,
                            Price = 12.50m,
                            QrCode = "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",
                            TicketCode = "233DADBBE44F",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            BookingSeatId = 3,
                            Price = 15.00m,
                            QrCode = "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",
                            TicketCode = "E3BA0200440C",
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            BookingSeatId = 4,
                            Price = 15.00m,
                            QrCode = "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",
                            TicketCode = "03DD405DBBAE",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("CineBox.Services.Database.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("passwordHash");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("passwordSalt");

                    b.Property<string>("Phone")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("phone");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("surname");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("PK__User__3213E83F430A5CF0");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "john@example.com",
                            Name = "John",
                            PasswordHash = "6YN5P1X5LBm8BrXPRbgxo9gOhRc=",
                            PasswordSalt = "AE9YsGCoSj4H1vy1RUHkng==",
                            Phone = "123-456-7890",
                            Status = true,
                            Surname = "Doe",
                            Username = "test"
                        },
                        new
                        {
                            Id = 2,
                            Email = "jane@example.com",
                            Name = "Jane",
                            PasswordHash = "hash2",
                            PasswordSalt = "salt2",
                            Phone = "987-654-3210",
                            Status = true,
                            Surname = "Smith",
                            Username = "jane_smith"
                        });
                });

            modelBuilder.Entity("CineBox.Services.Database.UsersRole", b =>
                {
                    b.Property<int>("UsersRolesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsersRolesId"));

                    b.Property<DateTime>("DateOfModification")
                        .HasColumnType("datetime")
                        .HasColumnName("dateOfModification");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("UsersRolesId")
                        .HasName("PK__UsersRol__A9752347C3F9B8FD");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UsersRoles");

                    b.HasData(
                        new
                        {
                            UsersRolesId = 1,
                            DateOfModification = new DateTime(2024, 7, 23, 17, 53, 54, 592, DateTimeKind.Local).AddTicks(980),
                            RoleId = 1,
                            UserId = 1
                        },
                        new
                        {
                            UsersRolesId = 2,
                            DateOfModification = new DateTime(2024, 7, 23, 17, 53, 54, 592, DateTimeKind.Local).AddTicks(1030),
                            RoleId = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("CineBox.Services.Database.Booking", b =>
                {
                    b.HasOne("CineBox.Services.Database.Promotion", "Promotion")
                        .WithMany("Bookings")
                        .HasForeignKey("PromotionId")
                        .IsRequired()
                        .HasConstraintName("FK_Booking_Promotion");

                    b.HasOne("CineBox.Services.Database.Screening", "Screening")
                        .WithMany("Bookings")
                        .HasForeignKey("ScreeningId")
                        .IsRequired()
                        .HasConstraintName("FK__Booking__screeni__4D94879B");

                    b.HasOne("CineBox.Services.Database.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Booking__user_id__4CA06362");

                    b.Navigation("Promotion");

                    b.Navigation("Screening");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CineBox.Services.Database.BookingSeat", b =>
                {
                    b.HasOne("CineBox.Services.Database.Booking", "Booking")
                        .WithMany("BookingSeats")
                        .HasForeignKey("BookingId")
                        .IsRequired()
                        .HasConstraintName("FK__BookingSe__booki__6477ECF3");

                    b.HasOne("CineBox.Services.Database.Seat", "Seat")
                        .WithMany("BookingSeats")
                        .HasForeignKey("SeatId")
                        .IsRequired()
                        .HasConstraintName("FK__BookingSe__seat___656C112C");

                    b.Navigation("Booking");

                    b.Navigation("Seat");
                });

            modelBuilder.Entity("CineBox.Services.Database.Hall", b =>
                {
                    b.HasOne("CineBox.Services.Database.Cinema", "Cinema")
                        .WithMany("Halls")
                        .HasForeignKey("CinemaId")
                        .IsRequired()
                        .HasConstraintName("FK__Hall__cinema_id__45F365D3");

                    b.Navigation("Cinema");
                });

            modelBuilder.Entity("CineBox.Services.Database.Movie", b =>
                {
                    b.HasOne("CineBox.Services.Database.Genre", "Genre")
                        .WithMany("Movies")
                        .HasForeignKey("GenreId")
                        .IsRequired()
                        .HasConstraintName("FK__Movie__genre_id__412EB0B6");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("CineBox.Services.Database.MovieActor", b =>
                {
                    b.HasOne("CineBox.Services.Database.Actor", "Actor")
                        .WithMany("MovieActors")
                        .HasForeignKey("ActorId")
                        .IsRequired()
                        .HasConstraintName("FK__MovieActo__actor__5CD6CB2B");

                    b.HasOne("CineBox.Services.Database.Movie", "Movie")
                        .WithMany("MovieActors")
                        .HasForeignKey("MovieId")
                        .IsRequired()
                        .HasConstraintName("FK__MovieActo__movie__5BE2A6F2");

                    b.Navigation("Actor");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("CineBox.Services.Database.News", b =>
                {
                    b.HasOne("CineBox.Services.Database.Cinema", "Cinema")
                        .WithMany("News")
                        .HasForeignKey("CinemaId")
                        .IsRequired()
                        .HasConstraintName("FK__News__cinema_id__02FC7413");

                    b.Navigation("Cinema");
                });

            modelBuilder.Entity("CineBox.Services.Database.Payment", b =>
                {
                    b.HasOne("CineBox.Services.Database.Booking", "Booking")
                        .WithMany("Payments")
                        .HasForeignKey("BookingId")
                        .IsRequired()
                        .HasConstraintName("FK__Payment__booking__534D60F1");

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("CineBox.Services.Database.Review", b =>
                {
                    b.HasOne("CineBox.Services.Database.Movie", "Movie")
                        .WithMany("Reviews")
                        .HasForeignKey("MovieId")
                        .IsRequired()
                        .HasConstraintName("FK__Review__movie_id__571DF1D5");

                    b.HasOne("CineBox.Services.Database.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Review__user_id__5629CD9C");

                    b.Navigation("Movie");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CineBox.Services.Database.Screening", b =>
                {
                    b.HasOne("CineBox.Services.Database.Hall", "Hall")
                        .WithMany("Screenings")
                        .HasForeignKey("HallId")
                        .IsRequired()
                        .HasConstraintName("FK__Screening__hall___49C3F6B7");

                    b.HasOne("CineBox.Services.Database.Movie", "Movie")
                        .WithMany("Screenings")
                        .HasForeignKey("MovieId")
                        .IsRequired()
                        .HasConstraintName("FK__Screening__movie__48CFD27E");

                    b.Navigation("Hall");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("CineBox.Services.Database.Seat", b =>
                {
                    b.HasOne("CineBox.Services.Database.Hall", "Hall")
                        .WithMany("Seats")
                        .HasForeignKey("HallId")
                        .IsRequired()
                        .HasConstraintName("FK__Seat__status__5FB337D6");

                    b.Navigation("Hall");
                });

            modelBuilder.Entity("CineBox.Services.Database.Ticket", b =>
                {
                    b.HasOne("CineBox.Services.Database.BookingSeat", "BookingSeat")
                        .WithOne("Ticket")
                        .HasForeignKey("CineBox.Services.Database.Ticket", "BookingSeatId")
                        .IsRequired()
                        .HasConstraintName("FK_Ticket_BookingSeat");

                    b.HasOne("CineBox.Services.Database.User", "User")
                        .WithMany("Tickets")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Ticket_User");

                    b.Navigation("BookingSeat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CineBox.Services.Database.UsersRole", b =>
                {
                    b.HasOne("CineBox.Services.Database.Role", "Role")
                        .WithMany("UsersRoles")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__UsersRole__role___3E52440B");

                    b.HasOne("CineBox.Services.Database.User", "User")
                        .WithMany("UsersRoles")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UsersRole__user___3D5E1FD2");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CineBox.Services.Database.Actor", b =>
                {
                    b.Navigation("MovieActors");
                });

            modelBuilder.Entity("CineBox.Services.Database.Booking", b =>
                {
                    b.Navigation("BookingSeats");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("CineBox.Services.Database.BookingSeat", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("CineBox.Services.Database.Cinema", b =>
                {
                    b.Navigation("Halls");

                    b.Navigation("News");
                });

            modelBuilder.Entity("CineBox.Services.Database.Genre", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("CineBox.Services.Database.Hall", b =>
                {
                    b.Navigation("Screenings");

                    b.Navigation("Seats");
                });

            modelBuilder.Entity("CineBox.Services.Database.Movie", b =>
                {
                    b.Navigation("MovieActors");

                    b.Navigation("Reviews");

                    b.Navigation("Screenings");
                });

            modelBuilder.Entity("CineBox.Services.Database.Promotion", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("CineBox.Services.Database.Role", b =>
                {
                    b.Navigation("UsersRoles");
                });

            modelBuilder.Entity("CineBox.Services.Database.Screening", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("CineBox.Services.Database.Seat", b =>
                {
                    b.Navigation("BookingSeats");
                });

            modelBuilder.Entity("CineBox.Services.Database.User", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Reviews");

                    b.Navigation("Tickets");

                    b.Navigation("UsersRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
